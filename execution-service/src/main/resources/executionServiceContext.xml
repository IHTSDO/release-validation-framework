<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		">

	<import resource="applicationContext.xml"/>
	<import resource="importerServiceContext.xml"/>
	<import resource="validationContext.xml"/>
	
	<context:annotation-config/>
	<tx:annotation-driven/>
	
	<context:property-placeholder location="file://${rvfConfigLocation:/tmp}/execution-service.properties" order="-1"
								  ignore-unresolvable="true" ignore-resource-not-found="true" />
	<context:property-placeholder location="classpath*:execution-service-defaults.properties" />
    
	<!-- Specify explicit data source so we can point to MySQL database, while rvf data is stored in H2 during testing-->
	<bean id="snomedDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${rvf.snomed.jdbc.driverClassName}"/>
		<property name="url" value="${rvf.snomed.jdbc.url}"/>
		<property name="username" value="${rvf.snomed.jdbc.username}"/>
		<property name="password" value="${rvf.snomed.jdbc.password}"/>
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<property name="timeBetweenEvictionRunsMillis" value="1800000"/>
		<property name="maxActive" value="-1"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
		<property name="numTestsPerEvictionRun" value="3"/>
		<!-- READ_COMMITTED -->
		<property name="defaultTransactionIsolation" value="2"/>
		
	</bean> 
	
	<bean factory-bean="s3ClientFactory" factory-method="getClient">
		<constructor-arg value="${offlineMode}" />
	</bean>

	<bean class="org.ihtsdo.otf.dao.s3.S3ClientFactory" name="s3ClientFactory">
		<property name="onlineImplementation">
			<bean class="org.ihtsdo.otf.dao.s3.S3ClientImpl">
				<constructor-arg>
					<bean class="com.amazonaws.auth.BasicAWSCredentials">
						<constructor-arg value="${aws.key}" />
						<constructor-arg value="${aws.privateKey}" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="offlineImplementation">
			<bean class="org.ihtsdo.otf.dao.s3.OfflineS3ClientImpl">
				<constructor-arg value="${s3.offline.directory}"/>
			</bean>
		</property>
	</bean>

	<bean class="org.ihtsdo.otf.dao.s3.helper.S3ClientHelper"/>

	<!-- service beans will go here -->
	<bean id="rvfDynamicDataSource" class="org.ihtsdo.rvf.execution.service.util.RvfDynamicDataSource">
		<property name="url" value="${rvf.jdbc.url}"/>
	</bean>
	<bean id="assertionExecutionService" class="org.ihtsdo.rvf.execution.service.impl.AssertionExecutionServiceImpl">
		<property name="qaResulTableName" value="${rvf.qa.result.table.name}"/>
		<property name="deltaTableSuffix" value="${rvf.delta.table.suffix}"/>
		<property name="snapshotTableSuffix" value="${rvf.snapshot.table.suffix}"/>
		<property name="fullTableSuffix" value="${rvf.full.table.suffix}"/>
	</bean>

	<bean id="releaseDataManager" class="org.ihtsdo.rvf.execution.service.impl.ReleaseDataManagerImpl">
		<property name="sctDataLocation" value="${rvf.data.folder.location}"/>
	</bean>
	<bean id="resourceDataLoader" class="org.ihtsdo.rvf.execution.service.impl.ResourceDataLoaderImpl"/>
	
	<bean class="org.ihtsdo.rvf.execution.service.impl.ValidationRunner" depends-on="assertionsDatabasePrimerService">
		<constructor-arg value="${rvf.assertion.execution.BatchSize}"/>
		<property name="droolRulesModuleName" value="${rvf.droolrule.module.name}"/>
	</bean>
	<bean id="versionLoader" class =" org.ihtsdo.rvf.execution.service.impl.ValidationVersionLoader"/>
	
	<bean class="org.ihtsdo.rvf.execution.service.impl.ValidationReportService">
		<constructor-arg name="bucketName" value="${executionBucketName}"/>
	</bean>
	
	<!--  <bean id ="resultExtractor" class="org.ihtsdo.rvf.execution.service.impl.ResultExtractorServiceImpl"/> -->
	<!-- No longer required for auto scaling
	<bean id="scheduleEventGenerator" class ="org.ihtsdo.rvf.execution.service.impl.RvfDbScheduledEventGenerator">
	<constructor-arg value="${rvf.qa.data.maxKeepTime}"/>
	</bean>
	-->
</beans>