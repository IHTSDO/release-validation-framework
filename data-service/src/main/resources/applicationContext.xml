<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:annotation-config/>
	<tx:annotation-driven/>
    <context:property-placeholder location="file:/${rvfConfigLocation:/tmp}/data-service.properties" order="-1"
                                  ignore-unresolvable="true" ignore-resource-not-found="true"/>
    <context:property-placeholder location="classpath:data-service-defaults.properties"/>
    
	<!-- service beans will go here -->
	<bean id="assertionService" class="org.ihtsdo.rvf.service.AssertionServiceImpl"/>
	<bean id="entityService" class="org.ihtsdo.rvf.service.EntityServiceImpl">
		<constructor-arg ref="entityDao"/>
	</bean>
	<!--  <bean id="qaResultService" class="org.ihtsdo.rvf.service.QAResultServiceImpl"/>-->
	
	<!-- dao mappings here -->
	<bean class="org.ihtsdo.rvf.dao.helper.TestDatabasePrimerDao"/>
	<bean id="assertionDao" class="org.ihtsdo.rvf.dao.AssertionDaoImpl"/>
	<bean id="entityDao" class="org.ihtsdo.rvf.dao.EntityDaoImpl"/>
	<bean id="assertionGroupDao" class="org.ihtsdo.rvf.dao.AssertionGroupDaoImpl"/>
	<!--  <bean id="qaResultDao" class="org.ihtsdo.rvf.dao.QAResultDaoImpl"/> -->

	<!--data source-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${rvf.jdbc.driverClassName}"/>
		<property name="url" value="${rvf.jdbc.url}"/>
		<property name="defaultCatalog" value="${rvf.master.schema.name}"/>
		<property name="username" value="${rvf.jdbc.username}"/>
		<property name="password" value="${rvf.jdbc.password}"/>
        <property name="maxActive" value="-1"/>
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<property name="timeBetweenEvictionRunsMillis" value="1800000"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
		<property name="numTestsPerEvictionRun" value="3"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>org.ihtsdo.rvf.entity</value>
				<value>org.ihtsdo.rvf.helper</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${rvf.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- <property name="dataSource" ref="dataSource"/> -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    	<property name="corePoolSize" value="5" />
   	 	<property name="maxPoolSize" value="10" />
    	<property name="queueCapacity" value="25" />
	</bean>
</beans>
