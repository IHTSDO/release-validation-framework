<beans xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<context:annotation-config/>
	<tx:annotation-driven/>
	
	<!-- Bean to resolve the 'data-service-properties-path' from a system property -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="placeholderPrefix" value="+{"/>
		<property name="properties">
			<props>
				<!-- Default path to override properties file -->
				<prop key="dataServicePropertiesPath">classpath:data-service.properties</prop>
			</props>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>

	<bean id="applicationContextConfigurer" class="org.ihtsdo.context.OrderedPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- Default properties file -->
				<value>classpath:data-service-defaults.properties</value>
				<!-- Override properties file -->
				<value>+{dataServicePropertiesPath}</value>
			</list>
		</property>
		<property name="order" value="100"/>
		<property name="ignoreResourceNotFound" value="true"/>
	</bean>

	<!-- service beans will go here -->
	<bean id="assertionService" class="org.ihtsdo.rvf.service.AssertionServiceImpl"/>
	<bean id="entityService" class="org.ihtsdo.rvf.service.EntityServiceImpl">
		<constructor-arg ref="entityDao"/>
	</bean>

	<!-- dao mappings here -->
	<bean class="org.ihtsdo.rvf.dao.helper.TestDatabasePrimerDao"/>
	<bean id="assertionDao" class="org.ihtsdo.rvf.dao.AssertionDaoImpl"/>
	<bean id="entityDao" class="org.ihtsdo.rvf.dao.EntityDaoImpl"/>

	<!--data source-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${rvf.jdbc.driverClassName}"/>
		<property name="url" value="${rvf.jdbc.url}"/>
		<property name="defaultCatalog" value="${rvf.master.schema.name}"/>
		<property name="username" value="${rvf.jdbc.username}"/>
		<property name="password" value="${rvf.jdbc.password}"/>
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<property name="timeBetweenEvictionRunsMillis" value="1800000"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
		<property name="numTestsPerEvictionRun" value="3"/>
	</bean>
	
	<!-- A second datasource is required in case the hibernate tables live apart from the snomed data eg during testing -->
	<bean id="snomedDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${rvf.jdbc.driverClassName}"/>
		<property name="url" value="${rvf.jdbc.url}"/>
		<property name="defaultCatalog" value="${rvf.master.schema.name}"/>
		<property name="username" value="${rvf.jdbc.username}"/>
		<property name="password" value="${rvf.jdbc.password}"/>
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<property name="timeBetweenEvictionRunsMillis" value="1800000"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
		<property name="numTestsPerEvictionRun" value="3"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>org.ihtsdo.rvf.entity</value>
				<value>org.ihtsdo.rvf.helper</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${rvf.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">${rvf.hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource"/>
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
</beans>
