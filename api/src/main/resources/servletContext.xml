<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		">

    <mvc:annotation-driven>
        <mvc:message-converters>
            <!--http://docs.spring.io/spring/docs/3.2.2.RELEASE/javadoc-api/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.html -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="indentOutput" value="true"/>
                    </bean>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- json generator to build json from our objects for the ember output -->
    <bean factory-bean="objectMapperFactory" factory-method="createObjectMapper"/>

    <bean id="objectMapperFactory" class="org.ihtsdo.rvf.service.mapping.JacksonObjectMapperFactory"/>

	<bean class="java.lang.String" id="s3ExecutionBucketName">
		<constructor-arg value="${executionBucketName}" />
	</bean>
	<bean class="java.lang.String" id="s3PublishBucketName">
		<constructor-arg value="${publishBucketName}" />
	</bean>
	
	<bean class="java.lang.String" id="imageId">
		<constructor-arg value="${rvf.autoscaling.imageId}"/>
	</bean>
	
	<bean class="java.lang.String" id="instanceType">
		<constructor-arg value="${rvf.autoscaling.instanceType}"/>
	</bean>
	
	<bean class="java.lang.String" id="securityGroupId">
		<constructor-arg value="${rvf.autoscaling.securityGroupId}"/>
	</bean>

	<bean class="java.lang.String" id="ec2Endpoint">
		<constructor-arg value="${rvf.autoscaling.ec2Endpoint}"/>
	</bean>
	
	<bean class="java.lang.String" id="keyName">
		<constructor-arg value="${rvf.autoscaling.keyPairName}"/>
	</bean>
	<bean class="java.lang.String" id="instanceTagName">
		<constructor-arg value="${rvf.autoscaling.tagName}"/>
	</bean>
	
	<bean class="java.lang.String" id="ec2SubnetId">
		<constructor-arg value="${rvf.autoscaling.ec2SubnetId}"/>
	</bean>
    
    <bean id="instanceManager" class ="org.ihtsdo.rvf.autoscaling.InstanceManager">
    	<constructor-arg>
			<bean class="com.amazonaws.auth.BasicAWSCredentials">
				<constructor-arg value="${aws.key}" />
				<constructor-arg value="${aws.privateKey}" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="ec2Endpoint"/>
	</bean>
    <bean class="org.ihtsdo.rvf.helper.JsonEntityGenerator"/>
    <bean id="resourceProviderFactory" class="org.ihtsdo.rvf.validation.log.impl.ValidationLogFactoryImpl"/>

	<import resource="validationContext.xml"/>
	<import resource="executionServiceContext.xml"/>
	<import resource="importerServiceContext.xml"/>
	<import resource="jiraServiceContext.xml"/>
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
	<mvc:resources mapping="/api-doc.html" location="/" />
	<bean class="org.ihtsdo.rvf.config.SwaggerConfig" />

</beans>
